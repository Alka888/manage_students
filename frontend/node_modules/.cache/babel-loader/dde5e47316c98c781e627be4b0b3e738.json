{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alena\\\\Desktop\\\\development2020\\\\react\\\\coding_himss\\\\frontend\\\\src\\\\components\\\\ReportDashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport './styles/ReportDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ReportDashboard() {\n  _s();\n\n  const [reps, setReps] = useState([{\n    _id: '',\n    state: '',\n    payload: '',\n    message: ''\n  }]);\n  const [updatedRep, setUpdatedRep] = useState({\n    _id: '',\n    state: '',\n    payload: '',\n    message: ''\n  });\n  useEffect(() => {\n    fetch(\"/reportdashboard\").then(res => {\n      return res.json();\n    }).then(jsonRes => setReps(jsonRes));\n  });\n\n  function deleteHandler(id) {\n    axios.delete('/delete/' + id);\n    alert(\"report is blocked and deleted\");\n    console.log(`Report with id ${id} deleted`);\n  }\n\n  function updateHandler(id) {\n    axios.put('/put/' + id, updatedRep);\n    alert('Report updated');\n    console.log(`Report with id ${id} updated`);\n  }\n\n  ;\n\n  function handleUpdate(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setUpdatedRep(prevInput => {\n      return { ...prevInput,\n        [name]: value\n      };\n    });\n    console.log(updatedRep);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: reps.map(rep => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Report\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"ID: \", rep._id, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"State: \", rep.state, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"Type: \", rep.payload, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"Message: \", rep.message, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            position: \"absolute\",\n            right: \"30px\",\n            top: \"40px\",\n            width: \"10%\"\n          },\n          onClick: () => deleteHandler(rep._id),\n          children: \"BLOCK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            position: \"absolute\",\n            right: \"30px\",\n            top: \"90px\",\n            width: \"10%\"\n          },\n          onClick: () => updateHandler(updatedRep._id),\n          children: \"RESOLVE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"repsInput\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleUpdate,\n            name: \"_id\",\n            value: updatedRep._id,\n            placeholder: \"id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleUpdate,\n            name: \"state\",\n            value: updatedRep.state,\n            placeholder: \"state\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleUpdate,\n            name: \"reportType\",\n            value: updatedRep.payload[2],\n            placeholder: \"type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleUpdate,\n            name: \"message\",\n            value: updatedRep.message,\n            placeholder: \"message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, rep._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 12\n  }, this);\n}\n\n_s(ReportDashboard, \"Em9USHn+b4d3JLTMjyfjaHAT4ao=\");\n\n_c = ReportDashboard;\nexport default ReportDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReportDashboard\");","map":{"version":3,"sources":["C:/Users/Alena/Desktop/development2020/react/coding_himss/frontend/src/components/ReportDashboard.js"],"names":["React","useEffect","useState","axios","ReportDashboard","reps","setReps","_id","state","payload","message","updatedRep","setUpdatedRep","fetch","then","res","json","jsonRes","deleteHandler","id","delete","alert","console","log","updateHandler","put","handleUpdate","event","name","value","target","prevInput","map","rep","position","right","top","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport './styles/ReportDashboard.css'\r\n\r\n\r\nfunction ReportDashboard() {\r\n    const [reps, setReps] = useState([{\r\n        _id: '',\r\n        state: '',\r\n        payload: '',\r\n        message: ''\r\n    }])\r\n\r\n    const [updatedRep, setUpdatedRep] = useState({\r\n        _id: '',\r\n        state: '',\r\n        payload: '',\r\n        message: ''\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(\"/reportdashboard\")\r\n            .then(res => {\r\n                return res.json()\r\n\r\n            }).then(jsonRes =>\r\n                setReps(jsonRes));\r\n\r\n    })\r\n\r\n    function deleteHandler(id) {\r\n        axios.delete('/delete/' + id);\r\n        alert(\"report is blocked and deleted\");\r\n        console.log(`Report with id ${id} deleted`);\r\n    }\r\n\r\n\r\n    function updateHandler(id) {\r\n        axios.put('/put/' + id, updatedRep);\r\n        alert('Report updated');\r\n        console.log(`Report with id ${id} updated`);\r\n    };\r\n\r\n    function handleUpdate(event) {\r\n        const { name, value } = event.target;\r\n        setUpdatedRep(prevInput => {\r\n            return (\r\n                {\r\n                    ...prevInput,\r\n                    [name]: value\r\n                }\r\n            );\r\n        });\r\n        console.log(updatedRep);\r\n    }\r\n\r\n    return <div>\r\n        {reps.map(rep => {\r\n            return (\r\n                <div className=\"container\" key={rep._id}>\r\n\r\n                    <h2>Report</h2>\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>ID: {rep._id} </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>State: {rep.state} </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Type: {rep.payload} </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Message: {rep.message} </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    <button style={{\r\n                        position: \"absolute\", right: \"30px\", top: \"40px\",\r\n                        width: \"10%\"\r\n                    }}\r\n                        onClick={() => deleteHandler(rep._id)}>BLOCK</button>\r\n\r\n                    <button style={{\r\n                        position: \"absolute\", right: \"30px\", top: \"90px\", width: \"10%\"\r\n                    }}\r\n                        onClick={() => updateHandler(updatedRep._id)}>RESOLVE</button>\r\n\r\n                    <hr />\r\n\r\n                    <div className=\"repsInput\">\r\n\r\n                        <input onChange={handleUpdate} name=\"_id\" value={updatedRep._id} placeholder=\"id\"></input>\r\n\r\n                        <input onChange={handleUpdate} name=\"state\" value={updatedRep.state} placeholder=\"state\"></input>\r\n\r\n                        <input onChange={handleUpdate} name=\"reportType\" value={updatedRep.payload[2]} placeholder=\"type\"></input>\r\n\r\n                        <input onChange={handleUpdate} name=\"message\" value={updatedRep.message} placeholder=\"message\"></input>\r\n\r\n                    </div>\r\n                </div>\r\n            )\r\n        })}\r\n\r\n    </div>\r\n}\r\n\r\nexport default ReportDashboard;\r\n"]},"metadata":{},"sourceType":"module"}