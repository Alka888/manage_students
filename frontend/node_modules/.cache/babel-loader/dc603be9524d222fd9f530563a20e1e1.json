{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alena\\\\Desktop\\\\development2020\\\\react\\\\students_app\\\\frontend\\\\src\\\\components\\\\ReportDashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport './styles/ReportDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ReportDashboard() {\n  _s();\n\n  const [firstname, setFirstname] = useState(\"\");\n  const [lastname, setLastname] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [schoolname, setSchoolname] = useState(\"\");\n  const [licence, setLicence] = useState(\"\");\n  useEffect(() => {\n    fetch('/reportdashboard').then(res => {\n      return res.json();\n    }).then(jsonRes => setReps(jsonRes));\n  }, []);\n\n  function deleteHandler(id) {\n    axios.delete('/delete/' + id);\n    alert(\"report is blocked and deleted\");\n    console.log(`Report with id ${id} deleted`);\n  }\n\n  function updateHandler(id) {\n    axios.put('/put/' + id, updatedRep);\n    alert('Report updated');\n    console.log(`Report with id ${id} updated`);\n  }\n\n  ;\n\n  function handleUpdate(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setUpdatedRep(prevInput => {\n      return { ...prevInput,\n        [name]: value\n      };\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: reps.map(rep => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Students\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"ID: \", rep._id, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"State: \", rep.state, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"Type: \", rep.reportType, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"Message: \", rep.message, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            position: \"absolute\",\n            right: \"30px\",\n            top: \"40px\",\n            width: \"10%\"\n          },\n          onClick: () => deleteHandler(rep._id),\n          children: \"BLOCK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            position: \"absolute\",\n            right: \"30px\",\n            top: \"90px\",\n            width: \"10%\"\n          },\n          onClick: () => updateHandler(updatedRep._id),\n          children: \"RESOLVE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"repsInput\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleUpdate,\n            name: \"_id\",\n            value: updatedRep._id,\n            placeholder: \"id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleUpdate,\n            name: \"state\",\n            value: updatedRep.state,\n            placeholder: \"state\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleUpdate,\n            name: \"reportType\",\n            value: updatedRep.reportType,\n            placeholder: \"type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleUpdate,\n            name: \"message\",\n            value: updatedRep.message,\n            placeholder: \"message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, rep._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 12\n  }, this);\n}\n\n_s(ReportDashboard, \"FyCekNO2s6i9qcExMybVPwCjeuA=\");\n\n_c = ReportDashboard;\nexport default ReportDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReportDashboard\");","map":{"version":3,"sources":["C:/Users/Alena/Desktop/development2020/react/students_app/frontend/src/components/ReportDashboard.js"],"names":["React","useEffect","useState","axios","ReportDashboard","firstname","setFirstname","lastname","setLastname","username","setUsername","schoolname","setSchoolname","licence","setLicence","fetch","then","res","json","jsonRes","setReps","deleteHandler","id","delete","alert","console","log","updateHandler","put","updatedRep","handleUpdate","event","name","value","target","setUpdatedRep","prevInput","reps","map","rep","_id","state","reportType","message","position","right","top","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport './styles/ReportDashboard.css'\r\n\r\n\r\nfunction ReportDashboard() {\r\n    const [firstname, setFirstname] = useState(\"\");\r\n    const [lastname, setLastname] = useState(\"\");\r\n    const [username, setUsername] = useState(\"\");\r\n    const [schoolname, setSchoolname] = useState(\"\");\r\n    const [licence, setLicence] = useState(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n        fetch('/reportdashboard')\r\n            .then(res => {\r\n                return res.json()\r\n\r\n            }).then(jsonRes =>\r\n                setReps(jsonRes));\r\n\r\n    }, [])\r\n\r\n    function deleteHandler(id) {\r\n        axios.delete('/delete/' + id);\r\n        alert(\"report is blocked and deleted\");\r\n        console.log(`Report with id ${id} deleted`);\r\n    }\r\n\r\n\r\n    function updateHandler(id) {\r\n        axios.put('/put/' + id, updatedRep);\r\n        alert('Report updated');\r\n        console.log(`Report with id ${id} updated`);\r\n    };\r\n\r\n    function handleUpdate(event) {\r\n        const { name, value } = event.target;\r\n        setUpdatedRep(prevInput => {\r\n            return (\r\n                {\r\n                    ...prevInput,\r\n                    [name]: value\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n    return <div>\r\n        {reps.map(rep => {\r\n            return (\r\n                <div className=\"container\" key={rep._id}>\r\n                    <h2>Students</h2>\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>ID: {rep._id} </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>State: {rep.state} </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Type: {rep.reportType} </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Message: {rep.message} </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    <button style={{\r\n                        position: \"absolute\", right: \"30px\", top: \"40px\",\r\n                        width: \"10%\"\r\n                    }}\r\n                        onClick={() => deleteHandler(rep._id)}>BLOCK</button>\r\n\r\n                    <button style={{\r\n                        position: \"absolute\", right: \"30px\", top: \"90px\", width: \"10%\"\r\n                    }}\r\n                        onClick={() => updateHandler(updatedRep._id)}>RESOLVE</button>\r\n\r\n                    <hr />\r\n\r\n                    <div className=\"repsInput\">\r\n\r\n                        <input onChange={handleUpdate} name=\"_id\" value={updatedRep._id} placeholder=\"id\"></input>\r\n\r\n                        <input onChange={handleUpdate} name=\"state\" value={updatedRep.state} placeholder=\"state\"></input>\r\n\r\n                        <input onChange={handleUpdate} name=\"reportType\" value={updatedRep.reportType} placeholder=\"type\"></input>\r\n\r\n                        <input onChange={handleUpdate} name=\"message\" value={updatedRep.message} placeholder=\"message\"></input>\r\n\r\n                    </div>\r\n                </div>\r\n            )\r\n        })}\r\n\r\n    </div>\r\n}\r\n\r\nexport default ReportDashboard;\r\n"]},"metadata":{},"sourceType":"module"}