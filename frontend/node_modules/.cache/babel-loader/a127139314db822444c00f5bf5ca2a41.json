{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alena\\\\Desktop\\\\development2020\\\\react\\\\coding_himss\\\\frontend\\\\src\\\\components\\\\ReportDashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport './styles/ReportDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ReportDashboard() {\n  _s();\n\n  const [reps, setReps] = useState([{\n    _id: '',\n    state: '',\n    reportType: '',\n    message: ''\n  }]);\n  const [isPut, setIsPut] = useState(false);\n  const [updatedItem, setUpdatedItem] = useState({\n    _id: '',\n    state: '',\n    reportType: '',\n    message: ''\n  });\n  useEffect(() => {\n    fetch(\"/reportdashboard\").then(res => {\n      return res.json();\n    }).then(jsonRes => setReps(jsonRes));\n  });\n\n  function deleteHandler(_id) {\n    axios.delete('/delete/' + _id);\n    alert(\"report is blocked and deleted\");\n  } // function updateHandler(_id) {\n  //     axios.put('/reports/' + _id);\n  //     alert('Report updated');\n  //     console.log(`Report with if ${_id} updated`);\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: reps.map(rep => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Report\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"ID: \", rep._id, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"State: \", rep.state, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"Type: \", rep.reportType, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"Message: \", rep.message, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteHandler(rep._id),\n          children: \"BLOCK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"_id\",\n            value: reps._id,\n            placeholder: \"id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"state\",\n            value: reps.state,\n            placeholder: \"state\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"reportType\",\n            value: reps.reportType,\n            placeholder: \"type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"message\",\n            value: reps.message,\n            placeholder: \"message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => openUpdate(rep._),\n            children: \"RESOLVE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, rep._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 12\n  }, this);\n}\n\n_s(ReportDashboard, \"YlJ7BXMzwMZ/AZ11N/nclaQmUcs=\");\n\n_c = ReportDashboard;\nexport default ReportDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReportDashboard\");","map":{"version":3,"sources":["C:/Users/Alena/Desktop/development2020/react/coding_himss/frontend/src/components/ReportDashboard.js"],"names":["React","useEffect","useState","axios","ReportDashboard","reps","setReps","_id","state","reportType","message","isPut","setIsPut","updatedItem","setUpdatedItem","fetch","then","res","json","jsonRes","deleteHandler","delete","alert","map","rep","openUpdate","_"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport './styles/ReportDashboard.css'\r\n\r\n\r\nfunction ReportDashboard() {\r\n    const [reps, setReps] = useState([{\r\n        _id: '',\r\n        state: '',\r\n        reportType: '',\r\n        message: ''\r\n    }])\r\n\r\n    const[isPut, setIsPut] = useState(false);\r\n\r\n    const[updatedItem, setUpdatedItem] = useState({\r\n        _id: '',\r\n        state: '',\r\n        reportType: '',\r\n        message: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        fetch(\"/reportdashboard\")\r\n            .then(res => {\r\n                return res.json()\r\n\r\n            }).then(jsonRes =>\r\n                setReps(jsonRes));\r\n\r\n    })\r\n\r\n    function deleteHandler(_id) {\r\n        axios.delete('/delete/' + _id);\r\n        alert(\"report is blocked and deleted\")\r\n    }\r\n\r\n\r\n    // function updateHandler(_id) {\r\n    //     axios.put('/reports/' + _id);\r\n    //     alert('Report updated');\r\n    //     console.log(`Report with if ${_id} updated`);\r\n    // }\r\n\r\n    return <div>\r\n\r\n        {reps.map(rep => {\r\n            return (\r\n                <div className=\"container\" key={rep._id}>\r\n                    <h2>Report</h2>\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>ID: {rep._id} </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>State: {rep.state} </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Type: {rep.reportType} </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Message: {rep.message} </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    <button onClick={() => deleteHandler(rep._id)}>BLOCK</button>\r\n\r\n\r\n                    <div>\r\n                        <input name=\"_id\" value={reps._id} placeholder=\"id\"></input>\r\n                        <input name=\"state\" value={reps.state} placeholder=\"state\"></input>\r\n                        <input name=\"reportType\" value={reps.reportType} placeholder=\"type\"></input>\r\n                        <input name=\"message\" value={reps.message} placeholder=\"message\"></input>\r\n\r\n                        <button onClick={() => openUpdate(rep._)}>RESOLVE</button>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            )\r\n        })}\r\n    </div>\r\n}\r\n\r\nexport default ReportDashboard;\r\n"]},"metadata":{},"sourceType":"module"}