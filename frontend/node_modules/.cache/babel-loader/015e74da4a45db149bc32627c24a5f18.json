{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alena\\\\Desktop\\\\development2020\\\\react\\\\students_app\\\\frontend\\\\src\\\\components\\\\ReportDashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport './styles/ReportDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ReportDashboard() {\n  _s();\n\n  const [studentList, setStudentList] = useState([]);\n  const [updatedRep, setUpdatedRep] = useState({\n    firstname: '',\n    lastname: '',\n    username: '',\n    schoolname: '',\n    licence: ''\n  });\n  useEffect(() => {\n    axios.get('http://localhost:3001/reportdashboard').then(response => {\n      setStudentList(response.data);\n    });\n    console.log('Report been created');\n  }, [setStudentList]);\n\n  const deleteHandler = id => {\n    axios.delete(\"'http://localhost:3001/api/delete\", firstname);\n    console.log(`Report with  deleted`);\n  };\n\n  const updateHandler = id => {\n    axios.put('/put/' + id, updatedRep);\n    alert('Report updated');\n    console.log(`Report with id ${id} updated`);\n  };\n\n  const handleUpdate = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUpdatedRep(prevInput => {\n      return { ...prevInput,\n        [name]: value\n      };\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: studentList.map(student => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"First name: \", student.firstname, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"Last name: \", student.lastname, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"Username: \", student.username, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"School name: \", student.schoolname, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"Licence: \", student.licence, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            position: \"absolute\",\n            right: \"30px\",\n            top: \"40px\",\n            width: \"10%\"\n          },\n          onClick: () => deleteHandler(student._id),\n          children: \"DELETE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            position: \"absolute\",\n            right: \"30px\",\n            top: \"90px\",\n            width: \"10%\"\n          },\n          onClick: () => updateHandler(updatedRep._id),\n          children: \"UPDATE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"repsInput\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleUpdate,\n            name: \"_id\",\n            value: updatedRep.firstname,\n            placeholder: \"id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleUpdate,\n            name: \"state\",\n            value: updatedRep.lastname,\n            placeholder: \"state\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleUpdate,\n            name: \"reportType\",\n            value: updatedRep.username,\n            placeholder: \"type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleUpdate,\n            name: \"message\",\n            value: updatedRep.schoolname,\n            placeholder: \"message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleUpdate,\n            name: \"message\",\n            value: updatedRep.licence,\n            placeholder: \"message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, student._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 12\n  }, this);\n}\n\n_s(ReportDashboard, \"7SUM4TjnvbAKA81/cbWHkxVWJs8=\");\n\n_c = ReportDashboard;\nexport default ReportDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReportDashboard\");","map":{"version":3,"sources":["C:/Users/Alena/Desktop/development2020/react/students_app/frontend/src/components/ReportDashboard.js"],"names":["React","useEffect","useState","axios","ReportDashboard","studentList","setStudentList","updatedRep","setUpdatedRep","firstname","lastname","username","schoolname","licence","get","then","response","data","console","log","deleteHandler","id","delete","updateHandler","put","alert","handleUpdate","event","name","value","target","prevInput","map","student","position","right","top","width","_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport './styles/ReportDashboard.css'\r\n\r\n\r\nfunction ReportDashboard() {\r\n\r\n    const [studentList, setStudentList] = useState([]);\r\n\r\n    const [updatedRep, setUpdatedRep] = useState({\r\n        firstname: '',\r\n        lastname: '',\r\n        username: '',\r\n        schoolname: '',\r\n        licence: '',\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:3001/reportdashboard').then((response) => {\r\n            setStudentList(response.data)\r\n        });\r\n\r\n        console.log('Report been created');\r\n\r\n    }, [setStudentList])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n        axios.delete(\"'http://localhost:3001/api/delete\", firstname);\r\n        console.log(`Report with  deleted`);\r\n    }\r\n\r\n\r\n    const updateHandler = (id) => {\r\n        axios.put('/put/' + id, updatedRep);\r\n        alert('Report updated');\r\n        console.log(`Report with id ${id} updated`);\r\n    };\r\n\r\n    const handleUpdate = (event) => {\r\n        const { name, value } = event.target;\r\n        setUpdatedRep(prevInput => {\r\n            return (\r\n                {\r\n                    ...prevInput,\r\n                    [name]: value\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n    return <div>\r\n        {studentList.map(student => {\r\n            return (\r\n                <div className=\"container\" key={student._id}>\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>First name: {student.firstname} </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Last name: {student.lastname} </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Username: {student.username} </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>School name: {student.schoolname} </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Licence: {student.licence} </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    <button style={{\r\n                        position: \"absolute\", right: \"30px\", top: \"40px\",\r\n                        width: \"10%\"\r\n                    }}\r\n                        onClick={() => deleteHandler(student._id)}>DELETE</button>\r\n\r\n                    <button style={{\r\n                        position: \"absolute\", right: \"30px\", top: \"90px\", width: \"10%\"\r\n                    }}\r\n                        onClick={() => updateHandler(updatedRep._id)}>UPDATE</button>\r\n\r\n                    <hr />\r\n\r\n                    <div className=\"repsInput\">\r\n\r\n                        <input onChange={handleUpdate} name=\"_id\" value={updatedRep.firstname} placeholder=\"id\"></input>\r\n\r\n                        <input onChange={handleUpdate} name=\"state\" value={updatedRep.lastname} placeholder=\"state\"></input>\r\n\r\n                        <input onChange={handleUpdate} name=\"reportType\" value={updatedRep.username} placeholder=\"type\"></input>\r\n\r\n                        <input onChange={handleUpdate} name=\"message\" value={updatedRep.schoolname} placeholder=\"message\"></input>\r\n\r\n                        <input onChange={handleUpdate} name=\"message\" value={updatedRep.licence} placeholder=\"message\"></input>\r\n\r\n                    </div>\r\n                </div>\r\n            )\r\n        })}\r\n\r\n    </div>\r\n}\r\n\r\nexport default ReportDashboard;\r\n"]},"metadata":{},"sourceType":"module"}